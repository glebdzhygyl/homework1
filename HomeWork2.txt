1)Move file from untracked to commit and the whole way back. Note: Do not skip any stage.

gleb@gleb-VirtualBox:~/homework/homework1$ touch trackedfile.txt
gleb@gleb-VirtualBox:~/homework/homework1$ git add .
gleb@gleb-VirtualBox:~/homework/homework1$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	new file:   trackedfile.txt
gleb@gleb-VirtualBox:~/homework/homework1$ git commit -m "added trackedfile"
[master b121338] added trackedfile
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 trackedfile.txt
gleb@gleb-VirtualBox:~/homework/homework1$ git reset --soft HEAD^1
gleb@gleb-VirtualBox:~/homework/homework1$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	new file:   trackedfile.txt
gleb@gleb-VirtualBox:~/homework/homework1$ git rm --cached trackedfile.txt 
rm 'trackedfile.txt'
gleb@gleb-VirtualBox:~/homework/homework1$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	trackedfile.txt

nothing added to commit but untracked files present (use "git add" to track)
gleb@gleb-VirtualBox:~/homework/homework1$ 

2)Create situation when you changes in working directory going to be overwritten by update. And try to avoid the problem with `git stash` cmd

gleb@gleb-VirtualBox:~/homework/homework1$ touch trackedfile.txt 
gleb@gleb-VirtualBox:~/homework/homework1$ git add . 
gleb@gleb-VirtualBox:~/homework/homework1$ git commit -m "added trackedfile"
[hw2branch 44665a9] added trackedfile
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 trackedfile.txt
gleb@gleb-VirtualBox:~/homework/homework1$ vim trackedfile.txt 
gleb@gleb-VirtualBox:~/homework/homework1$ git checkout master
error: Your local changes to the following files would be overwritten by checkout:
	trackedfile.txt
Please commit your changes or stash them before you switch branches.
Aborting
gleb@gleb-VirtualBox:~/homework/homework1$ git stash
Saved working directory and index state WIP on hw2branch: 44665a9 added trackedfile
gleb@gleb-VirtualBox:~/homework/homework1$ git branch
* hw2branch
  master
gleb@gleb-VirtualBox:~/homework/homework1$ git checkout master

3) Create annotated tag. Push it, Remove it

gleb@gleb-VirtualBox:~/homework$ git tag -a v1.0002 730dc9adc
gleb@gleb-VirtualBox:~/homework$ git show v1.0002
tag v1.0002
Tagger: Gleb Dzhygyl <glib.dzhygil@globallogic.com>
adding second tag
gleb@gleb-VirtualBox:~/homework$ git push origin v1.0002
Username for 'https://github.com': glebdzhygyl
Password for 'https://glebdzhygyl@github.com': 
Enumerating objects: 1, done.
Counting objects: 100% (1/1), done.
Writing objects: 100% (1/1), 174 bytes | 174.00 KiB/s, done.
Total 1 (delta 0), reused 0 (delta 0)
To https://github.com/glebdzhygyl/homework1.git
 * [new tag]         v1.0002 -> v1.0002
gleb@gleb-VirtualBox:~/homework$ git push origin --delete v1.0002
Username for 'https://github.com': glebdzhygyl
Password for 'https://glebdzhygyl@github.com': 
To https://github.com/glebdzhygyl/homework1.git
 - [deleted]         v1.0002

4) Create a branch from initial commit of master branch

gleb@gleb-VirtualBox:~/homework$ touch branchfromcommit
gleb@gleb-VirtualBox:~/homework$ git add branchfromcommit 
gleb@gleb-VirtualBox:~/homework$ git commit -m "added branchfromcommit"
[hw2branch 58f6869] added branchfromcommit
 2 files changed, 1 deletion(-)
 create mode 100644 branchfromcommit
 delete mode 100644 commitbranch.txt
gleb@gleb-VirtualBox:~/homework$ git log
gleb@gleb-VirtualBox:~/homework$ git branch BranchFromCommit 58f68693195ab99ff6d88fd99a6893c78049ee3a
gleb@gleb-VirtualBox:~/homework$ git branch
  BranchFromCommit
  homework
* hw2branch
gleb@gleb-VirtualBox:~/homework$ git checkout BranchFromCommit 
Switched to branch 'BranchFromCommit'


5) Remove file from git repository only(leave it on file system)

gleb@gleb-VirtualBox:~/homework$ echo "commitbranch" > commitbranch.txt
gleb@gleb-VirtualBox:~/homework$ git add commitbranch.txt 
gleb@gleb-VirtualBox:~/homework$ git commit -m "added .txt file"
[hw2branch d9ecc7f] added .txt file
 1 file changed, 1 insertion(+)
 create mode 100644 commitbranch.txt
gleb@gleb-VirtualBox:~/homework$ git rm --cached commitbranch.txt 
rm 'commitbranch.txt'
gleb@gleb-VirtualBox:~/homework$ git status
On branch hw2branch
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	deleted:    commitbranch.txt

